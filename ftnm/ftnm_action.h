#ifndef	_FTNM_ACTION_H_
#define	_FTNM_ACTION_H_

#include <pthread.h>
#include "ftm.h"

typedef	struct
{
	FTM_ACTION	xInfo;
//	FTM_TIME	xTime;
	FTM_TIMER	xTimer;
}	FTNM_ACTION, _PTR_ FTNM_ACTION_PTR;

typedef	struct
{
}	FTNM_ACTION_MANAGER_CONFIG, _PTR_ FTNM_ACTION_MANAGER_CONFIG_PTR;

typedef	struct
{
	FTNM_ACTION_MANAGER_CONFIG	xConfig;
	FTM_MSG_QUEUE_PTR			pMsgQ;
	FTM_BOOL					bStop;
	pthread_t					xPThread;
}	FTNM_ACTION_MANAGER, _PTR_ FTNM_ACTION_MANAGER_PTR;
	
FTM_RET	FTNM_ACTION_init(FTM_VOID);
FTM_RET	FTNM_ACTION_final(FTM_VOID);

FTM_RET	FTNM_ACTION_loadConfig(FTM_CHAR_PTR pFileName);

FTM_RET	FTNM_ACTION_start(FTM_VOID);
FTM_RET	FTNM_ACTION_stop(FTM_VOID);

FTM_RET	FTNM_ACTION_create(FTM_ACTION_PTR pInfo);
FTM_RET	FTNM_ACTION_del(FTM_ACTION_ID  xActorID);
FTM_RET	FTNM_ACTION_count(FTM_ULONG_PTR pulCount);
FTM_RET	FTNM_ACTION_get(FTM_ACTION_ID xActorID, FTNM_ACTION_PTR _PTR_ ppActor);
FTM_RET	FTNM_ACTION_getAt(FTM_ULONG ulIndex, FTNM_ACTION_PTR _PTR_ ppActor);

FTM_RET	FTNM_ACTION_run(FTM_ACTION_ID xActionID);
#endif
