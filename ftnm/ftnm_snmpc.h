#ifndef	__FTNM_SNMP_CLIENT_H__
#define	__FTNM_SNMP_CLIENT_H__

#include "ftnm.h"
#include "ftnm_node.h"
#include "ftnm_ep.h"
#include "ftnm_snmptrapd.h"

#define	FTNM_SNMPC_NAME_LENGTH	128
#define	FTNM_SNMPC_NAME			"ftnm:agent"
#define	FTNM_SNMPC_RETRY_COUNT	3

typedef	FTM_ULONG		FTNM_SNMPC_STATE, _PTR_ FTNM_SNMPC_STATE_PTR;

#define	FTNM_SNMPC_STATE_UNKNOWN		0x00000000
#define	FTNM_SNMPC_STATE_INITIALIZED	0x00000001
#define	FTNM_SNMPC_STATE_RUNNING		0x00000002
#define	FTNM_SNMPC_STATE_TIMEOUT		0x00000003
#define	FTNM_SNMPC_STATE_ERROR			0x00000004
#define	FTNM_SNMPC_STATE_COMPLETED		0x00000005

typedef	struct	FTNM_CONTEXT_STRUCT _PTR_ FTNM_CONTEXT_PTR;

typedef	struct
{
	FTM_CHAR		pName[FTNM_SNMPC_NAME_LENGTH + 1];
	FTM_LIST		xMIBList;

	FTM_ULONG		ulMaxRetryCount;
}	FTNM_SNMPC_CONFIG, _PTR_ FTNM_SNMPC_CONFIG_PTR;

typedef	struct 
{
	FTNM_SNMPC_CONFIG		xConfig;
	pthread_t				xPThread;
	FTM_BOOL				bStop;

	FTNM_CONTEXT_PTR		pCTX;
	FTNM_SERVICE_ID			xServiceID;
	FTNM_SERVICE_CALLBACK	fServiceCB;
}	FTNM_SNMPC, _PTR_ FTNM_SNMPC_PTR;

FTM_RET	FTNM_SNMPC_init(FTNM_CONTEXT_PTR pCTX, FTNM_SNMPC_PTR pClient);
FTM_RET	FTNM_SNMPC_final(FTNM_SNMPC_PTR pClient);

FTM_RET FTNM_SNMPC_loadFromFile(FTNM_SNMPC_PTR pClient, FTM_CHAR_PTR pFileName);
FTM_RET FTNM_SNMPC_showConfig(FTNM_SNMPC_PTR pClient);

FTM_RET FTNM_SNMPC_start(FTNM_SNMPC_PTR pClient);
FTM_RET FTNM_SNMPC_stop(FTNM_SNMPC_PTR pClient);

FTM_RET	FTNM_SNMPC_setServiceCallback(FTNM_SNMPC_PTR pClient, FTNM_SERVICE_ID xID, FTNM_SERVICE_CALLBACK fServiceCB);

FTM_RET	FTNM_SNMPC_getEPData(FTNM_NODE_SNMPC_PTR pNode, FTNM_EP_PTR pEP, FTM_EP_DATA_PTR pData);
FTM_RET	FTNM_SNMPC_setEPData(FTNM_NODE_SNMPC_PTR pNode, FTNM_EP_PTR pEP, FTM_EP_DATA_PTR pData);

FTM_RET	FTNM_SNMPC_getOID(FTM_CHAR_PTR pInput, oid *pOID, size_t *pnOIDLen);

#endif

