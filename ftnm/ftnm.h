#ifndef	__FTNM_H__
#define	__FTNM_H__

#include "ftm.h"
#include "ftnm_types.h"
#include "ftnm_dmc.h"
#include "ftnm_client.h"
#include "ftnm_server.h"
#include "ftnm_snmpc.h"
#include "ftnm_snmptrapd.h"
#include "ftnm_trigger.h"
#include "ftnm_action.h"
#include "ftnm_rule.h"
#include "ftnm_msg.h"

#define	FTNM_DEFAULT_SERVER_SESSION_COUNT	10

typedef	FTM_ULONG	FTNM_STATE;

#define	FTNM_STATE_CREATING 			0x00000001
#define	FTNM_STATE_CREATED				0x00000002
#define	FTNM_STATE_INITIALIZING			0x00000003
#define	FTNM_STATE_INITIALIZED			0x00000004
#define	FTNM_STATE_SYNCING				0x00000005
#define	FTNM_STATE_SYNCHRONIZED			0x00000006
#define	FTNM_STATE_CALLED				0x00000007
#define	FTNM_STATE_WAITING				0x00000008
#define	FTNM_STATE_CALL_FOR_PROCESSING	0x00000009
#define	FTNM_STATE_PROCESSING			0x0000000A
#define	FTNM_STATE_STOPED				0x0000000B
#define	FTNM_STATE_PROCESS_FINISHED		0x0000000C
#define	FTNM_STATE_PAUSED				0x0000000D
#define	FTNM_STATE_INACTIVATED			0x0000000E
#define	FTNM_STATE_FINISHING			0x0000000F
#define	FTNM_STATE_FINISHED				0x00000012
#define	FTNM_STATE_CONNECTED			0x00000010
#define	FTNM_STATE_INITIALIZE			0x00000011

typedef	struct
{
	FTM_CHAR		pDID[FTM_DID_LEN + 1];
}	FTM_OM_CONFIG, _PTR_ FTM_OM_CONFIG_PTR;

typedef	struct FTNM_EPM_STRUCT _PTR_ FTNM_EPM_PTR;

typedef	struct FTNM_CONTEXT_STRUCT
{
	FTM_OM_CONFIG		xConfig;

	FTNM_STATE			xState;
	pthread_t			xThread;

	FTM_BOOL			bStop;

	FTNM_EPM_PTR		pEPM;
	FTNM_MSG_QUEUE_PTR	pMsgQ;
	FTNM_TRIGGERM_PTR	pTriggerM;
	FTNM_ACTIONM_PTR	pActionM;
	FTNM_RULEM_PTR		pRuleM;
}	FTNM_CONTEXT, _PTR_ FTNM_CONTEXT_PTR;


FTM_RET	FTNM_create(FTNM_CONTEXT_PTR _PTR_ ppCTX);
FTM_RET	FTNM_destroy(FTNM_CONTEXT_PTR _PTR_ ppCTX);

FTM_RET	FTNM_init(FTNM_CONTEXT_PTR pCTX);
FTM_RET	FTNM_final(FTNM_CONTEXT_PTR pCTX);

FTM_RET	FTNM_loadFromFile(FTNM_CONTEXT_PTR pCTX, FTM_CHAR_PTR pConfigFileName);
FTM_RET	FTNM_showConfig(FTNM_CONTEXT_PTR pCTX);

FTM_RET FTNM_start(FTNM_CONTEXT_PTR pCTX);
FTM_RET FTNM_stop(FTNM_CONTEXT_PTR pCTX);
FTM_RET FTNM_waitingForFinished(FTNM_CONTEXT_PTR pCTX);

FTM_RET	FTNM_getDID(FTNM_CONTEXT_PTR pCTX, FTM_CHAR_PTR pBuff, FTM_ULONG ulBuffLen);

FTM_RET	FTNM_createEP(FTNM_CONTEXT_PTR pCTX, FTM_EP_PTR pInfo);
FTM_RET	FTNM_destroyEP(FTNM_CONTEXT_PTR pCTX, FTM_EP_ID xEPID);
FTM_RET	FTNM_getEPDataList(FTNM_CONTEXT_PTR pCTX, FTM_EP_ID xEPID, FTM_ULONG ulStart, FTM_EP_DATA_PTR pDataList, FTM_ULONG ulMaxCount, FTM_ULONG_PTR pulCount);
FTM_RET	FTNM_getEPDataInfo(FTNM_CONTEXT_PTR pCTX, FTM_EP_ID xEPID, FTM_ULONG_PTR pulBeginTime, FTM_ULONG_PTR pulEndTime, FTM_ULONG_PTR pulCount);
FTM_RET	FTNM_getEPDataCount(FTNM_CONTEXT_PTR pCTX, FTM_EP_ID xEPID, FTM_ULONG_PTR ulCount);

FTM_RET	FTNM_NOTIFY_SNMPTrap
(
	FTNM_CONTEXT_PTR 	pCTX, 
	FTM_CHAR_PTR 		pTrapMsg
);

FTM_RET FTNM_NOTIFY_EPChanged
(	
	FTNM_CONTEXT_PTR 	pCTX, 
	FTM_EP_ID 			xEPID, 
	FTM_EP_DATA_PTR 	pData
);

FTM_RET	FTNM_NOTIFY_EPUpdated
(
	FTNM_CONTEXT_PTR 	pCTX, 
	FTM_EP_ID 			xEPID, 
	FTM_EP_DATA_PTR 	pData
);

FTM_RET	FTNM_NOTIFY_EPDataSaveToDB
(
	FTNM_CONTEXT_PTR 	pCTX, 
	FTM_EP_ID 			xEPID, 
	FTM_EP_DATA_PTR 	pData
);

FTM_RET	FTNM_NOTIFY_quit
(
	FTNM_CONTEXT_PTR 	pCTX
);

FTM_RET		FTNM_NOTIFY_EPDataTransINT
(
	FTNM_CONTEXT_PTR	pCTX,
	FTM_EP_ID 			xEPID, 
	FTM_INT				nValue,
	FTM_INT 			nAverage, 
	FTM_INT 			nCount, 
	FTM_INT 			nMax, 
	FTM_INT 			nMin
);

FTM_RET		FTNM_NOTIFY_EPDataTransULONG
(
	FTNM_CONTEXT_PTR	pCTX,
	FTM_EP_ID 			xEPID, 
	FTM_ULONG 			ulValue, 
	FTM_ULONG 			ulAverage, 
	FTM_INT 			nCount, 
	FTM_ULONG 			ulMax, 
	FTM_ULONG 			ulMin
);

FTM_RET		FTNM_NOTIFY_EPDataTransFLOAT
(
	FTNM_CONTEXT_PTR	pCTX,
	FTM_EP_ID 			xEPID, 
	FTM_FLOAT 			fValue, 
	FTM_FLOAT 			fAverage, 
	FTM_INT 			nCount, 
	FTM_FLOAT 			fMax, 
	FTM_FLOAT 			fMin
);

FTM_RET		FTNM_NOTIFY_EPDataTransBOOL
(
	FTNM_CONTEXT_PTR	pCTX,
	FTM_EP_ID 			xEPID, 
	FTM_BOOL 			bValue
);

#endif

