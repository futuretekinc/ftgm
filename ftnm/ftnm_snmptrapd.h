#ifndef	_FTNM_SNMPTRAPD_H_
#define	_FTNM_SNMPTRAPD_H_

#include <pthread.h>
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/net-snmp-includes.h>
#include <net-snmp/agent/net-snmp-agent-includes.h>

#include "ftm.h"
#include "ftnm_snmp.h"
#include "ftnm_service.h"

#define	FTNM_SNMPTRAPD_NAME_LENGTH	128
#define	FTNM_SNMPTRAPD_NAME			"ftnm:snmptrapd"
#define	FTNM_SNMPTRAPD_PORT			162

typedef	enum
{
	FTNM_SNMPTRAPD_MSG_TYPE_UNKNOWN = 0,
	FTNM_SNMPTRAPD_MSG_TYPE_EP_CHANGED,
} FTNM_SNMPTRAPD_MSG_TYPE, _PTR_ FTNM_SNMPTRAPD_MSG_TYPE_PTR;

typedef struct
{
	FTM_CHAR				pName[FTNM_SNMPTRAPD_NAME_LENGTH + 1];
	FTM_USHORT				usPort;
}	FTNM_SNMPTRAPD_CONFIG, _PTR_ FTNM_SNMPTRAPD_CONFIG_PTR;

typedef	FTM_RET (*FTNM_SNMPTRAPD_CALLBACK)(FTM_CHAR_PTR pTrapMsg);

typedef	struct
{
	FTNM_SNMPTRAPD_CONFIG	xConfig;
	FTM_LIST				xTrapCBList;
	FTM_BOOL				bStop;
	pthread_t				xPThread;
	netsnmp_transport 		*pTransport;

	FTNM_CONTEXT_PTR		pCTX;
	FTNM_SERVICE_ID			xServiceID;
	FTNM_SERVICE_CALLBACK	fServiceCB;
}	FTNM_SNMPTRAPD, _PTR_ FTNM_SNMPTRAPD_PTR;

FTM_RET	FTNM_SNMPTRAPD_init(FTNM_CONTEXT_PTR pCTX, FTNM_SNMPTRAPD_PTR pSNMPTRAPD);
FTM_RET	FTNM_SNMPTRAPD_final(FTNM_SNMPTRAPD_PTR pSNMPTRAPD);

FTM_RET FTNM_SNMPTRAPD_start(FTNM_SNMPTRAPD_PTR pSNMPTRAPD);
FTM_RET FTNM_SNMPTRAPD_stop(FTNM_SNMPTRAPD_PTR pSNMPTRAPD);

FTM_RET FTNM_SNMPTRAPD_loadFromFile(FTNM_SNMPTRAPD_PTR pSNMPTRAPD, FTM_CHAR_PTR pFileName);
FTM_RET FTNM_SNMPTRAPD_showConfig(FTNM_SNMPTRAPD_PTR pSNMPTRAPD);

FTM_RET	FTNM_SNMPTRAPD_setServiceCallback(FTNM_SNMPTRAPD_PTR pSNMPTRAPD, FTNM_SERVICE_ID xID, FTNM_SERVICE_CALLBACK fServiceCB);
FTM_RET	FTNM_SNMPTRAPD_addTrapOID(FTNM_SNMPTRAPD_PTR pSNMPTRAPD, FTNM_SNMP_OID_PTR pOID);
#endif
