#ifndef	_FTM_MQTT_CLIENT_H_
#define	_FTM_MQTT_CLIENT_H_

#include "ftm.h"
#include "ftnm.h"
#include <pthread.h>

#define	FTM_MQTT_CLIENT_TOPIC_LENGTH				128
#define	FTM_MQTT_CLIENT_MESSAGE_LENGTH				1024
#define	FTM_MQTT_CLIENT_DEFAULT_BROKER				"127.0.0.1"
#define	FTM_MQTT_CLIENT_DEFAULT_PORT				1883
#define	FTM_MQTT_CLIENT_DEFAULT_RECONNECTION_TIME	5

#define	FTM_MQTT_METHOD_REQ_TIME_SYNC				1
#define	FTM_MQTT_METHOD_REQ_CONTROL_ACTUATOR		2
#define	FTM_MQTT_METHOD_REQ_SET_PROPERTY			3
#define	FTM_MQTT_METHOD_REQ_POWER_OFF				4
#define	FTM_MQTT_METHOD_REQ_REBOOT					5
#define	FTM_MQTT_METHOD_REQ_RESTART					6
#define	FTM_MQTT_METHOD_REQ_SW_UPDATE				7
#define	FTM_MQTT_METHOD_REQ_SW_INFO					8

#define	FTM_MQTT_CLIENT_DEFAULT_CB_SET				1

typedef	struct FTNM_CONTEXT_STRUCT _PTR_ FTNM_CONTEXT_PTR;

typedef	struct
{
	FTM_CHAR	pClientID[24];

	struct
	{
		FTM_CHAR	pHost[128];
		FTM_UINT16	usPort;
	}	xBroker;

	FTM_ULONG	ulReconnectionTime;
	FTM_ULONG	ulCBSet;
}	FTM_MQTT_CLIENT_CONFIG, _PTR_ FTM_MQTT_CLIENT_CONFIG_PTR;

typedef	struct
{
	FTM_MQTT_CLIENT_CONFIG	xConfig;

	FTNM_CONTEXT_PTR		pCTX;

	FTM_BOOL				bStop;
	FTM_BOOL				bConnected;
	pthread_t				xMain;
	pthread_t				xConnector;
	FTM_TIMER				xReconnectionTimer;

	FTM_CHAR				pDID[FTM_DID_LEN + 1];
	struct mosquitto		*pMosquitto;
	FTNM_MSG_QUEUE_PTR		pMsgQ;

	FTNM_SERVICE_ID			xServiceID;
	FTNM_SERVICE_CALLBACK	fServiceCB;
}	FTM_MQTT_CLIENT, _PTR_ FTM_MQTT_CLIENT_PTR;

FTM_RET	FTM_MQTT_CLIENT_create(FTNM_CONTEXT_PTR pCTX, FTM_MQTT_CLIENT_PTR _PTR_ ppClient);
FTM_RET	FTM_MQTT_CLIENT_destroy(FTM_MQTT_CLIENT_PTR _PTR_ ppClient);

FTM_RET	FTM_MQTT_CLIENT_init(FTNM_CONTEXT_PTR pCTX, FTM_MQTT_CLIENT_PTR pClient);
FTM_RET	FTM_MQTT_CLIENT_final(FTM_MQTT_CLIENT_PTR pClient);

FTM_RET	FTM_MQTT_CLIENT_loadConfig(FTM_MQTT_CLIENT_PTR pClient, FTM_MQTT_CLIENT_CONFIG_PTR pConfig);
FTM_RET	FTM_MQTT_CLIENT_loadFromFile(FTM_MQTT_CLIENT_PTR pClient, FTM_CHAR_PTR pFileName);
FTM_RET	FTM_MQTT_CLIENT_showConfig(FTM_MQTT_CLIENT_PTR pClient);

FTM_RET	FTM_MQTT_CLIENT_start(FTM_MQTT_CLIENT_PTR pClient);
FTM_RET	FTM_MQTT_CLIENT_stop(FTM_MQTT_CLIENT_PTR pClient);

FTM_RET	FTM_MQTT_CLIENT_setCallback(FTM_MQTT_CLIENT_PTR pClient, FTNM_SERVICE_ID xID, FTNM_SERVICE_CALLBACK fCB);
FTM_RET	FTM_MQTT_CLIENT_notify(FTM_MQTT_CLIENT_PTR pClient, FTNM_MSG_PTR pMsg);
#endif
