#ifndef	_FTM_SERVICE_H_
#define	_FTM_SERVICE_H_

#include "ftm.h"
#include "ftm_om_msg.h"

typedef	struct FTM_OM_STRUCT _PTR_ FTM_OM_PTR;

typedef	enum
{
	FTM_OM_SERVICE_ALL = 0,
	FTM_OM_SERVICE_SERVER,
	FTM_OM_SERVICE_SNMP_CLIENT,
	FTM_OM_SERVICE_SNMPTRAPD,
	FTM_OM_SERVICE_DBM,
	FTM_OM_SERVICE_MQTT_CLIENT,
	FTM_OM_SERVICE_SHELL
}	FTM_OM_SERVICE_TYPE, _PTR_ FTM_OM_SERVICE_TYPE_PTR;


typedef	FTM_ULONG	FTM_OM_SERVICE_ID;

typedef	FTM_RET	(*FTM_OM_SERVICE_INIT)(FTM_VOID_PTR pData, FTM_OM_PTR pOM);
typedef	FTM_RET	(*FTM_OM_SERVICE_FINAL)(FTM_VOID_PTR pData);
typedef	FTM_RET	(*FTM_OM_SERVICE_START)(FTM_VOID_PTR pData);
typedef	FTM_RET	(*FTM_OM_SERVICE_STOP)(FTM_VOID_PTR pData);
typedef	FTM_RET	(*FTM_OM_SERVICE_CALLBACK)(FTM_OM_SERVICE_ID xID, FTM_OM_MSG_TYPE xMsg, FTM_VOID_PTR pData);
typedef	FTM_RET	(*FTM_OM_SERVICE_SET_CALLBACK)(FTM_VOID_PTR pData, FTM_OM_SERVICE_ID xID, FTM_OM_SERVICE_CALLBACK fCB);
typedef	FTM_RET	(*FTM_OM_SERVICE_LOAD_FROM_FILE)(FTM_VOID_PTR pData, FTM_CHAR_PTR pFileName);
typedef	FTM_RET	(*FTM_OM_SERVICE_SHOW_CONFIG)(FTM_VOID_PTR pData);
typedef	FTM_RET	(*FTM_OM_SERVICE_NOTIFY)(FTM_VOID_PTR pData, FTM_OM_MSG_PTR pMsg);

typedef	struct
{
	FTM_OM_SERVICE_TYPE			xType;
	FTM_OM_SERVICE_ID				xID;
	FTM_CHAR_PTR				pName;
	FTM_OM_SERVICE_INIT			fInit;
	FTM_OM_SERVICE_FINAL			fFinal;
	FTM_OM_SERVICE_START			fStart;
	FTM_OM_SERVICE_STOP			fStop;
	FTM_OM_SERVICE_SET_CALLBACK	fSetCallback;
	FTM_OM_SERVICE_CALLBACK		fCallback;
	FTM_OM_SERVICE_LOAD_FROM_FILE	fLoadFromFile;
	FTM_OM_SERVICE_SHOW_CONFIG	fShowConfig;
	FTM_OM_SERVICE_NOTIFY			fNotify;

	FTM_VOID_PTR				pData;

// Run-time data
	FTM_RET						xRet;
}	FTM_OM_SERVICE, _PTR_ FTM_OM_SERVICE_PTR;

FTM_RET	FTM_OM_SERVICE_init
(
	FTM_OM_PTR 	pOM, 
	FTM_OM_SERVICE_PTR pServices, 
	FTM_ULONG ulCount
);

FTM_RET	FTM_OM_SERVICE_final
(
	FTM_VOID
);

FTM_RET	FTM_OM_SERVICE_loadFromFile
(
	FTM_OM_SERVICE_TYPE xType, 
	FTM_CHAR_PTR 		pFileName
);

FTM_RET	FTM_OM_SERVICE_showConfig
(
	FTM_OM_SERVICE_TYPE xType
);

FTM_RET	FTM_OM_SERVICE_start
(
	FTM_OM_SERVICE_TYPE xType
);

FTM_RET	FTM_OM_SERVICE_stop
(
	FTM_OM_SERVICE_TYPE xType
);

FTM_RET	FTM_OM_SERVICE_notify
(
	FTM_OM_SERVICE_TYPE xType, 
	FTM_OM_MSG_PTR 		pMsg
);

FTM_RET	FTM_OM_SERVICE_register
(
	FTM_OM_SERVICE_PTR pService
);

FTM_RET	FTM_OM_SERVICE_unregister
(
	FTM_OM_SERVICE_TYPE xType
);

FTM_RET FTM_OM_SERVICE_count
(
	FTM_ULONG_PTR 	pulCount
);

FTM_RET FTM_OM_SERVICE_get
(
	FTM_OM_SERVICE_TYPE xType, 
	FTM_OM_SERVICE_PTR _PTR_ ppService
);

FTM_RET FTM_OM_SERVICE_getAt
(
	FTM_ULONG ulIndex, 
	FTM_OM_SERVICE_PTR _PTR_ ppService
);

#endif
