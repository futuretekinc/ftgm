!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CLIENT	Makefile	/^CLIENT=tpclient$/;"	m
CLIENT_LDFLAGS	Makefile	/^CLIENT_LDFLAGS=$(LDFLAGS) -L.\/ -lftomcl -lftomc -lftm -lconfig -lcurl -lcjson -lpthread  -lm -lrt$/;"	m
CLIENT_OBJS	Makefile	/^CLIENT_OBJS=$(CLIENT_SRCS:.c=.o)$/;"	m
CLIENT_SRCS	Makefile	/^CLIENT_SRCS=main.c \\$/;"	m
FTOM_TP_CLIENT	ftom_tp_client.h	/^}	FTOM_TP_CLIENT, _PTR_ FTOM_TP_CLIENT_PTR;$/;"	t	typeref:struct:__anon3
FTOM_TP_CLIENT_CB_readString	ftom_tp_client.c	/^size_t FTOM_TP_CLIENT_CB_readString$/;"	f
FTOM_TP_CLIENT_CB_response	ftom_tp_client.c	/^size_t FTOM_TP_CLIENT_CB_response$/;"	f
FTOM_TP_CLIENT_CMD	main.c	/^}	FTOM_TP_CLIENT_CMD, _PTR_ FTOM_TP_CLIENT_CMD_PTR;$/;"	t	typeref:enum:__anon1	file:
FTOM_TP_CLIENT_CMD_DEVICE_CREATE	main.c	/^	FTOM_TP_CLIENT_CMD_DEVICE_CREATE,$/;"	e	enum:__anon1	file:
FTOM_TP_CLIENT_CMD_DEVICE_DELETE	main.c	/^	FTOM_TP_CLIENT_CMD_DEVICE_DELETE,$/;"	e	enum:__anon1	file:
FTOM_TP_CLIENT_CMD_GW_GET_INFO	main.c	/^	FTOM_TP_CLIENT_CMD_GW_GET_INFO,$/;"	e	enum:__anon1	file:
FTOM_TP_CLIENT_CMD_GW_GET_MODEL	main.c	/^	FTOM_TP_CLIENT_CMD_GW_GET_MODEL,$/;"	e	enum:__anon1	file:
FTOM_TP_CLIENT_CMD_GW_GET_STATUS	main.c	/^	FTOM_TP_CLIENT_CMD_GW_GET_STATUS,$/;"	e	enum:__anon1	file:
FTOM_TP_CLIENT_CMD_GW_SET_STATUS	main.c	/^	FTOM_TP_CLIENT_CMD_GW_SET_STATUS,$/;"	e	enum:__anon1	file:
FTOM_TP_CLIENT_CMD_INFO	main.c	/^}	FTOM_TP_CLIENT_CMD_INFO, _PTR_ FTOM_TP_CLIENT_CMD_INFO_PTR;$/;"	t	typeref:struct:__anon2	file:
FTOM_TP_CLIENT_CMD_INFO_PTR	main.c	/^}	FTOM_TP_CLIENT_CMD_INFO, _PTR_ FTOM_TP_CLIENT_CMD_INFO_PTR;$/;"	t	typeref:struct:__anon2	file:
FTOM_TP_CLIENT_CMD_PTR	main.c	/^}	FTOM_TP_CLIENT_CMD, _PTR_ FTOM_TP_CLIENT_CMD_PTR;$/;"	t	typeref:enum:__anon1	file:
FTOM_TP_CLIENT_CMD_SENSOR_CREATE	main.c	/^	FTOM_TP_CLIENT_CMD_SENSOR_CREATE,$/;"	e	enum:__anon1	file:
FTOM_TP_CLIENT_CMD_SENSOR_DELETE	main.c	/^	FTOM_TP_CLIENT_CMD_SENSOR_DELETE,$/;"	e	enum:__anon1	file:
FTOM_TP_CLIENT_CMD_SENSOR_GET_STATUS	main.c	/^	FTOM_TP_CLIENT_CMD_SENSOR_GET_STATUS,$/;"	e	enum:__anon1	file:
FTOM_TP_CLIENT_CMD_SENSOR_LIST	main.c	/^	FTOM_TP_CLIENT_CMD_SENSOR_LIST,$/;"	e	enum:__anon1	file:
FTOM_TP_CLIENT_CMD_SENSOR_SET_STATUS	main.c	/^	FTOM_TP_CLIENT_CMD_SENSOR_SET_STATUS,$/;"	e	enum:__anon1	file:
FTOM_TP_CLIENT_CMD_SENSOR_SET_VALUE	main.c	/^	FTOM_TP_CLIENT_CMD_SENSOR_SET_VALUE$/;"	e	enum:__anon1	file:
FTOM_TP_CLIENT_CMD_UNKNOWN	main.c	/^	FTOM_TP_CLIENT_CMD_UNKNOWN = 0,$/;"	e	enum:__anon1	file:
FTOM_TP_CLIENT_DEVICE_create	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_DEVICE_create$/;"	f
FTOM_TP_CLIENT_EP_create	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_EP_create$/;"	f
FTOM_TP_CLIENT_GW_getInfo	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_GW_getInfo$/;"	f
FTOM_TP_CLIENT_GW_getModel	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_GW_getModel$/;"	f
FTOM_TP_CLIENT_GW_setID	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_GW_setID$/;"	f
FTOM_TP_CLIENT_GW_setStatus	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_GW_setStatus$/;"	f
FTOM_TP_CLIENT_PTR	ftom_tp_client.h	/^}	FTOM_TP_CLIENT, _PTR_ FTOM_TP_CLIENT_PTR;$/;"	t	typeref:struct:__anon3
FTOM_TP_CLIENT_SENSOR_TYPE_INFO	ftom_tp_client.c	/^} FTOM_TP_CLIENT_SENSOR_TYPE_INFO, _PTR_ FTOM_TP_CLIENT_SENSOR_TYPE_INFO_PTR; $/;"	t	typeref:struct:FTOM_TP_CLIENT_SENSOR_TYPE_INFO_STRUCT	file:
FTOM_TP_CLIENT_SENSOR_TYPE_INFO_PTR	ftom_tp_client.c	/^} FTOM_TP_CLIENT_SENSOR_TYPE_INFO, _PTR_ FTOM_TP_CLIENT_SENSOR_TYPE_INFO_PTR; $/;"	t	typeref:struct:FTOM_TP_CLIENT_SENSOR_TYPE_INFO_STRUCT	file:
FTOM_TP_CLIENT_SENSOR_TYPE_INFO_STRUCT	ftom_tp_client.c	/^typedef struct FTOM_TP_CLIENT_SENSOR_TYPE_INFO_STRUCT$/;"	s	file:
FTOM_TP_CLIENT_SENSOR_create	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_SENSOR_create$/;"	f
FTOM_TP_CLIENT_SENSOR_delete	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_SENSOR_delete$/;"	f
FTOM_TP_CLIENT_SENSOR_getList	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_SENSOR_getList$/;"	f
FTOM_TP_CLIENT_SENSOR_getStatus	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_SENSOR_getStatus$/;"	f
FTOM_TP_CLIENT_SENSOR_getValue	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_SENSOR_getValue$/;"	f
FTOM_TP_CLIENT_SENSOR_setStatus	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_SENSOR_setStatus$/;"	f
FTOM_TP_CLIENT_SENSOR_setValues	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_SENSOR_setValues$/;"	f
FTOM_TP_CLIENT_final	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_final$/;"	f
FTOM_TP_CLIENT_init	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_init$/;"	f
FTOM_TP_CLIENT_perform	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_perform$/;"	f
FTOM_TP_CLIENT_postBody	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_postBody$/;"	f
FTOM_TP_CLIENT_putBody	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_putBody$/;"	f
FTOM_TP_CLIENT_setDataDump	ftom_tp_client.c	/^ FTM_RET	FTOM_TP_CLIENT_setDataDump$/;"	f
FTOM_TP_CLIENT_setDeleteURL	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_setDeleteURL$/;"	f
FTOM_TP_CLIENT_setGetURL	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_setGetURL$/;"	f
FTOM_TP_CLIENT_setPostURL	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_setPostURL$/;"	f
FTOM_TP_CLIENT_setPutURL	ftom_tp_client.c	/^FTM_RET	FTOM_TP_CLIENT_setPutURL$/;"	f
FTOM_TP_CLIENT_setVerbose	ftom_tp_client.c	/^ FTM_RET	FTOM_TP_CLIENT_setVerbose$/;"	f
TOPDIR	Makefile	/^TOPDIR=..\/..$/;"	m
__FTOM_TP_CLIENT_H__	ftom_tp_client.h	2;"	d
bDataDump	ftom_tp_client.c	/^FTM_BOOL	bDataDump = FTM_FALSE;$/;"	v	file:
bDataDump	main.c	/^FTM_BOOL	bDataDump = FTM_TRUE;$/;"	v
bGlobalInit	ftom_tp_client.c	/^FTM_BOOL	bGlobalInit = FTM_FALSE;$/;"	v	file:
bStatus	main.c	/^FTM_BOOL	bStatus = FTM_FALSE;$/;"	v
bVerbose	ftom_tp_client.c	/^FTM_BOOL	bVerbose = FTM_TRUE;$/;"	v	file:
bVerbose	main.c	/^FTM_BOOL	bVerbose = FTM_TRUE;$/;"	v
main	main.c	/^int main(FTM_INT nArgc, FTM_CHAR_PTR pArgv[])$/;"	f
pBase	ftom_tp_client.h	/^	FTM_CHAR			pBase[1024];$/;"	m	struct:__anon3
pCURL	ftom_tp_client.h	/^	CURL 				_PTR_ pCURL;$/;"	m	struct:__anon3
pCategory	ftom_tp_client.c	/^	FTM_CHAR_PTR	pCategory;$/;"	m	struct:FTOM_TP_CLIENT_SENSOR_TYPE_INFO_STRUCT	file:
pData	ftom_tp_client.h	/^	FTM_CHAR_PTR		pData;$/;"	m	struct:__anon3
pDriver	ftom_tp_client.c	/^	FTM_CHAR_PTR	pDriver;$/;"	m	struct:FTOM_TP_CLIENT_SENSOR_TYPE_INFO_STRUCT	file:
pGatewayID	ftom_tp_client.h	/^	FTM_CHAR			pGatewayID[FTM_DID_LEN+1];$/;"	m	struct:__anon3
pHTTPHeader	ftom_tp_client.h	/^	struct curl_slist	_PTR_ pHTTPHeader;$/;"	m	struct:__anon3	typeref:struct:__anon3::_PTR_
pModel	ftom_tp_client.c	/^	FTM_CHAR_PTR	pModel;$/;"	m	struct:FTOM_TP_CLIENT_SENSOR_TYPE_INFO_STRUCT	file:
pName	ftom_tp_client.c	/^	FTM_CHAR_PTR	pName;$/;"	m	struct:FTOM_TP_CLIENT_SENSOR_TYPE_INFO_STRUCT	file:
pResp	ftom_tp_client.h	/^	FTM_CHAR_PTR		pResp;$/;"	m	struct:__anon3
pSensorTypeInfo	ftom_tp_client.c	/^FTOM_TP_CLIENT_SENSOR_TYPE_INFO pSensorTypeInfo[] = $/;"	v	file:
pString	main.c	/^	FTM_CHAR_PTR		pString;$/;"	m	struct:__anon2	file:
pTPClientCmds	main.c	/^FTOM_TP_CLIENT_CMD_INFO	pTPClientCmds[] =$/;"	v
pURL	ftom_tp_client.h	/^	FTM_CHAR			pURL[1024];$/;"	m	struct:__anon3
ulRespLen	ftom_tp_client.h	/^	FTM_ULONG			ulRespLen;$/;"	m	struct:__anon3
ulTimeout	main.c	/^FTM_ULONG	ulTimeout = 90;$/;"	v
xCmd	main.c	/^	FTOM_TP_CLIENT_CMD	xCmd;$/;"	m	struct:__anon2	file:
xData	main.c	/^FTM_EP_DATA	xData =$/;"	v
xEP	main.c	/^FTM_EP	xEP =$/;"	v
xType	ftom_tp_client.c	/^	FTM_EP_TYPE		xType;$/;"	m	struct:FTOM_TP_CLIENT_SENSOR_TYPE_INFO_STRUCT	file:
