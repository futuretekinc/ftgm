#ifndef	__FTOM_SNMP_CLIENT_H__
#define	__FTOM_SNMP_CLIENT_H__

#include "ftom.h"
#include "ftom_node.h"
#include "ftom_ep.h"
#include "ftom_snmptrap.h"
#include "ftom_msg.h"

#define	FTOM_SNMPC_NAME_LENGTH		128
#define	FTOM_SNMPC_NAME				"ftom:agent"
#define	FTOM_SNMPC_RETRY_COUNT		3
#define	FTOM_SNMPC_LOOP_INTERVAL	100 // ms
struct  FTOM_NODE_SNMPC_STRUCT;

typedef	FTM_ULONG		FTOM_SNMPC_STATE, _PTR_ FTOM_SNMPC_STATE_PTR;

#define	FTOM_SNMPC_STATE_UNKNOWN		0x00000000
#define	FTOM_SNMPC_STATE_INITIALIZED	0x00000001
#define	FTOM_SNMPC_STATE_RUNNING		0x00000002
#define	FTOM_SNMPC_STATE_TIMEOUT		0x00000003
#define	FTOM_SNMPC_STATE_ERROR			0x00000004
#define	FTOM_SNMPC_STATE_COMPLETED		0x00000005

typedef	struct
{
	FTM_CHAR		pName[FTOM_SNMPC_NAME_LENGTH + 1];
	FTM_LIST		xMIBList;

	FTM_ULONG		ulLoopInterval;
	FTM_ULONG		ulMaxRetryCount;
}	FTOM_SNMPC_CONFIG, _PTR_ FTOM_SNMPC_CONFIG_PTR;

typedef	struct 
{
	FTOM_SNMPC_CONFIG	xConfig;
	pthread_t			xPThread;

	FTM_BOOL			bStop;
	FTOM_MSG_QUEUE		xMsgQ;
	FTM_LOCK			xLock;
	FTOM_SERVICE_ID		xServiceID;
	FTOM_SERVICE_CB		fServiceCB;

	FTOM_SNMPTRAP_PTR	pTrap;
}	FTOM_SNMPC, _PTR_ FTOM_SNMPC_PTR;

FTM_RET	FTOM_SNMPC_create
(
	FTOM_SNMPC_PTR _PTR_ 	ppSNMPC
);

FTM_RET	FTOM_SNMPC_destroy
(
	FTOM_SNMPC_PTR _PTR_ 	ppClient
);

FTM_RET	FTOM_SNMPC_init
(
	FTOM_SNMPC_PTR 	pClient
);

FTM_RET	FTOM_SNMPC_final
(
	FTOM_SNMPC_PTR pClient
);

FTM_RET FTOM_SNMPC_loadConfig
(
	FTOM_SNMPC_PTR 	pClient, 
	FTM_CONFIG_PTR		pConfig
);

FTM_RET FTOM_SNMPC_loadConfigFromFile
(
	FTOM_SNMPC_PTR pClient, 
	FTM_CHAR_PTR pFileName
);

FTM_RET FTOM_SNMPC_saveConfig
(
	FTOM_SNMPC_PTR 	pClient, 
	FTM_CONFIG_PTR	pConfig
);

FTM_RET FTOM_SNMPC_showConfig
(
	FTOM_SNMPC_PTR pClient
);

FTM_RET FTOM_SNMPC_start
(
	FTOM_SNMPC_PTR pClient
);

FTM_RET FTOM_SNMPC_stop
(
	FTOM_SNMPC_PTR pClient
);

FTM_RET	FTOM_SNMPC_getEPCount
(
	FTOM_SNMPC_PTR 	pClient, 
	FTM_CHAR_PTR	pIP,	
	FTM_EP_TYPE		xType,
	FTM_ULONG_PTR	pulCount
);

FTM_RET	FTOM_SNMPC_getEPID
(
	FTOM_SNMPC_PTR	pClient,
	FTM_CHAR_PTR	pIP,
	FTM_EP_TYPE		xType,
	FTM_ULONG		ulIndex,
	FTM_CHAR_PTR	pEPID,
	FTM_ULONG		ulMaxLen
);

FTM_RET	FTOM_SNMPC_getEPName
(
	FTOM_SNMPC_PTR	pClient,
	FTM_CHAR_PTR	pIP,
	FTM_EP_TYPE		xType,
	FTM_ULONG		ulIndex,
	FTM_CHAR_PTR	pBuff,
	FTM_ULONG		ulMaxLen
);

FTM_RET	FTOM_SNMPC_getEPUnit
(
	FTOM_SNMPC_PTR	pClient,
	FTM_CHAR_PTR	pIP,
	FTM_EP_TYPE		xType,
	FTM_ULONG		ulIndex,
	FTM_CHAR_PTR	pBuff,
	FTM_ULONG		ulMaxLen
);

FTM_RET	FTOM_SNMPC_getEPState
(
	FTOM_SNMPC_PTR 	pClient, 
	FTM_CHAR_PTR	pIP,	
	FTM_EP_TYPE		xType,
	FTM_ULONG		ulIndex,
	FTM_BOOL_PTR	pbEnable
);

FTM_RET	FTOM_SNMPC_getEPInterval
(
	FTOM_SNMPC_PTR	pClient,
	FTM_CHAR_PTR	pIP,
	FTM_EP_TYPE		xType,
	FTM_ULONG		ulIndex,
	FTM_ULONG_PTR	pulInterval
);

FTM_RET	FTOM_SNMPC_getEPInfo
(
	FTOM_SNMPC_PTR 	pClient, 
	FTM_CHAR_PTR	pIP,	
	FTM_EP_TYPE		xType,
	FTM_ULONG		ulIndex,
	FTM_EP_PTR		pEPInfo
);

FTM_RET	FTOM_SNMPC_setServiceCallback
(
	FTOM_SNMPC_PTR 	pClient, 
	FTOM_SERVICE_ID	xID, 
	FTOM_SERVICE_CB	fServiceCB
);

FTM_RET	FTOM_SNMPC_sendMessage
(
	FTOM_SNMPC_PTR	pClient,
	FTOM_MSG_PTR	pMsg
);

FTM_RET	FTOM_SNMPC_getOID
(	
	FTM_CHAR_PTR 		pInput, 
	FTM_SNMP_OID_PTR	pOID
);

FTM_RET	FTOM_SNMPC_getULONG
(
	FTOM_SNMPC_PTR 		pClient, 
	FTM_CHAR_PTR		pIP,	
	FTM_SNMP_OID_PTR	pOID,
	FTM_ULONG_PTR		pulCount
);

FTM_RET	FTOM_SNMPC_getString
(
	FTOM_SNMPC_PTR 		pClient, 
	FTM_CHAR_PTR		pIP,	
	FTM_SNMP_OID_PTR	pOID,
	FTM_CHAR_PTR		pBuff,
	FTM_ULONG			ulMaxLen
);


FTM_RET	FTOM_SNMPC_get
(
	FTOM_SNMPC_PTR		pClient,
	FTM_ULONG			ulVersion,
	FTM_CHAR_PTR		pURL,
	FTM_CHAR_PTR		pCommunity,
	FTM_SNMP_OID_PTR	pOID,
	FTM_ULONG			ulTimeout,
	FTM_VALUE_PTR		pValue,
	FTM_BOOL_PTR		pbValid
);

FTM_RET	FTOM_SNMPC_set
(
	FTOM_SNMPC_PTR		pClient,
	FTM_ULONG			ulVersion,
	FTM_CHAR_PTR		pURL,
	FTM_CHAR_PTR		pCommunity,
	FTM_SNMP_OID_PTR	pOID,
	FTM_ULONG			ulTimeout,
	FTM_VALUE_PTR		pValue
);
#endif

