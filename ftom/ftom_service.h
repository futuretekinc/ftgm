#ifndef	_FTM_SERVICE_H_
#define	_FTM_SERVICE_H_

#include "ftm.h"
#include "ftom_msg.h"

typedef	struct FTOM_STRUCT _PTR_ FTOM_PTR;

typedef	enum
{
	FTOM_SERVICE_ALL = 0,
	FTOM_SERVICE_SERVER,
	FTOM_SERVICE_SNMP_CLIENT,
	FTOM_SERVICE_SNMPTRAPD,
	FTOM_SERVICE_DMC,
	FTOM_SERVICE_MQTT_CLIENT,
	FTOM_SERVICE_TPCLIENT,
	FTOM_SERVICE_SHELL,
	FTOM_SERVICE_DISCOVERY
}	FTOM_SERVICE_TYPE, _PTR_ FTOM_SERVICE_TYPE_PTR;


typedef	FTM_ULONG	FTOM_SERVICE_ID;

typedef	FTM_RET	(*FTOM_SERVICE_CREATE)(FTM_VOID_PTR _PTR_ pData);
typedef	FTM_RET	(*FTOM_SERVICE_DESTROY)(FTM_VOID_PTR _PTR_ pData);
typedef	FTM_RET	(*FTOM_SERVICE_INIT)(FTM_VOID_PTR pData);
typedef	FTM_RET	(*FTOM_SERVICE_FINAL)(FTM_VOID_PTR pData);
typedef	FTM_RET	(*FTOM_SERVICE_START)(FTM_VOID_PTR pData);
typedef	FTM_RET	(*FTOM_SERVICE_STOP)(FTM_VOID_PTR pData);
typedef	FTM_RET	(*FTOM_SERVICE_IS_RUN)(FTM_VOID_PTR pData, FTM_BOOL_PTR pbRun);
typedef	FTM_RET	(*FTOM_SERVICE_CALLBACK)(FTOM_SERVICE_ID xID, FTOM_MSG_TYPE xMsg, FTM_VOID_PTR pData);
typedef	FTM_RET	(*FTOM_SERVICE_SET_CALLBACK)(FTM_VOID_PTR pData, FTOM_SERVICE_ID xID, FTOM_SERVICE_CALLBACK fCB);
typedef	FTM_RET	(*FTOM_SERVICE_LOAD_CONFIG)(FTM_VOID_PTR pData, FTM_CONFIG_PTR pConfig);
typedef	FTM_RET	(*FTOM_SERVICE_SAVE_CONFIG)(FTM_VOID_PTR pData, FTM_CONFIG_PTR pConfig);
typedef	FTM_RET	(*FTOM_SERVICE_LOAD_FROM_FILE)(FTM_VOID_PTR pData, FTM_CHAR_PTR pFileName);
typedef	FTM_RET	(*FTOM_SERVICE_SHOW_CONFIG)(FTM_VOID_PTR pData);
typedef	FTM_RET	(*FTOM_SERVICE_SEND_MESSAGE)(FTM_VOID_PTR pData, FTOM_MSG_PTR pMsg);

typedef	struct
{
	FTOM_SERVICE_TYPE			xType;
	FTOM_SERVICE_ID				xID;
	FTM_CHAR_PTR				pName;
	FTOM_SERVICE_CREATE			fCreate;
	FTOM_SERVICE_DESTROY		fDestroy;
	FTOM_SERVICE_INIT			fInit;
	FTOM_SERVICE_FINAL			fFinal;
	FTOM_SERVICE_START			fStart;
	FTOM_SERVICE_STOP			fStop;
	FTOM_SERVICE_IS_RUN			fIsRun;
	FTOM_SERVICE_SET_CALLBACK	fSetCallback;
	FTOM_SERVICE_CALLBACK		fCallback;
	FTOM_SERVICE_LOAD_CONFIG	fLoadConfig;
	FTOM_SERVICE_SAVE_CONFIG	fSaveConfig;
	FTOM_SERVICE_LOAD_FROM_FILE	fLoadFromFile;
	FTOM_SERVICE_SHOW_CONFIG	fShowConfig;
	FTOM_SERVICE_SEND_MESSAGE	fSendMessage;

	FTM_VOID_PTR				pData;

// Run-time data
	FTM_RET						xRet;
}	FTOM_SERVICE, _PTR_ FTOM_SERVICE_PTR;

FTM_RET	FTOM_SERVICE_init
(
	FTOM_SERVICE_PTR pServices, 
	FTM_ULONG ulCount
);

FTM_RET	FTOM_SERVICE_final
(
	FTM_VOID
);

FTM_RET	FTOM_SERVICE_loadFromFile
(
	FTOM_SERVICE_TYPE xType, 
	FTM_CHAR_PTR 		pFileName
);

FTM_RET	FTOM_SERVICE_showConfig
(
	FTOM_SERVICE_TYPE xType
);

FTM_RET	FTOM_SERVICE_start
(
	FTOM_SERVICE_TYPE xType
);

FTM_RET	FTOM_SERVICE_stop
(
	FTOM_SERVICE_TYPE xType
);

FTM_RET	FTOM_SERVICE_sendMessage
(
	FTOM_SERVICE_TYPE xType, 
	FTOM_MSG_PTR 		pMsg
);

FTM_RET	FTOM_SERVICE_register
(
	FTOM_SERVICE_PTR pService
);

FTM_RET	FTOM_SERVICE_unregister
(
	FTOM_SERVICE_TYPE xType
);

FTM_RET FTOM_SERVICE_count
(
	FTM_ULONG_PTR 	pulCount
);

FTM_RET FTOM_SERVICE_get
(
	FTOM_SERVICE_TYPE xType, 
	FTOM_SERVICE_PTR _PTR_ ppService
);

FTM_RET FTOM_SERVICE_getAt
(
	FTM_ULONG ulIndex, 
	FTOM_SERVICE_PTR _PTR_ ppService
);

#endif
