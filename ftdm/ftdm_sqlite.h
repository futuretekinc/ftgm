#ifndef	__SQLITE_IF_H__
#define	__SQLITE_IF_H__

#include "ftm_types.h"
#include "ftm_trigger.h"
#include "ftdm_config.h"

FTM_RET	FTDM_DBIF_init
(
	FTM_VOID
);

FTM_RET	FTDM_DBIF_final
(
	FTM_VOID
);

FTM_RET	FTDM_DBIF_open
(
	FTM_VOID
);

FTM_RET	FTDM_DBIF_close
(
	FTM_VOID
);

FTM_RET	FTDM_DBIF_loadConfig
(
	FTDM_CFG_DB_PTR	pConfig
);

FTM_RET	FTDM_DBIF_loadFromFile
(
	FTM_CHAR_PTR	pFileName
);

FTM_RET	FTDM_DBIF_NODE_initTable
(
	FTM_VOID
);

FTM_BOOL	FTDM_DBIF_NODE_isTableExist
(
	FTM_VOID
);

FTM_RET	FTDM_DBIF_getTableCount
(
	FTM_ULONG_PTR	pulCount
);

FTM_RET FTDM_DBIF_getTableList
(
	FTM_CHAR_PTR _PTR_	pTables,
	FTM_ULONG		ulMaxCount,
	FTM_ULONG_PTR	pulCount
);

FTM_RET	FTDM_DBIF_NODE_count
(
	FTM_ULONG_PTR		pCount
);

FTM_RET	FTDM_DBIF_NODE_getList
(
	FTM_NODE_PTR	pInfos,
	FTM_ULONG			nMaxCount,
	FTM_ULONG_PTR		pCount
);

FTM_RET	FTDM_DBIF_deleteTable
(
	FTM_CHAR_PTR		pTableName
);

FTM_RET	FTDM_DBIF_TABLE_deleteAllTables
(
	FTM_VOID
);

FTM_RET	FTDM_DBIF_NODE_create
(
 	FTM_NODE_PTR	pInfo
);

FTM_RET	FTDM_DBIF_NODE_destroy
(
	FTM_CHAR_PTR		pDID
);

FTM_RET	FTDM_DBIF_NODE_get
(
	FTM_CHAR_PTR		pDID,
	FTM_NODE_PTR	pInfo
);

FTM_RET	FTDM_DBIF_NODE_setURL
(
	FTM_CHAR_PTR			pDID,
	FTM_CHAR_PTR			pURL
);

FTM_RET	FTDM_DBIF_NODE_getURL
(
	FTM_CHAR_PTR			pDID,
	FTM_CHAR_PTR			pBuff,
	FTM_ULONG				nBuffLen
);

FTM_RET	FTDM_DBIF_NODE_setLocation
(
	FTM_CHAR_PTR	pDID,
	FTM_CHAR_PTR	pLocation
);

FTM_RET	FTDM_DBIF_NODE_getLocation
(
	FTM_CHAR_PTR	pDID,
	FTM_CHAR_PTR	pBuff,
	FTM_ULONG		nBuffLen
);

FTM_RET	FTDM_DBIF_EP_initTable
(
	FTM_VOID
);

FTM_BOOL	FTDM_DBIF_EP_isTableExist
(
	FTM_VOID
);

FTM_RET	FTDM_DBIF_EP_append
(
 	FTM_EP_PTR		pInfo
);

FTM_RET	FTDM_DBIF_EP_del
(
	FTM_CHAR_PTR	pEPID
);

FTM_RET	FTDM_DBIF_EP_count
(
	FTM_ULONG_PTR	pCount
);

FTM_RET	FTDM_DBIF_EP_isExist
(
	FTM_CHAR_PTR	pEPID,
	FTM_BOOL_PTR	pbExist
);

FTM_RET	FTDM_DBIF_EP_getList
(
	FTM_EP_PTR		pInfos,
	FTM_ULONG		nMaxCount,
	FTM_ULONG_PTR	pCount
);

FTM_RET	FTDM_DBIF_EP_get
(
	FTM_CHAR_PTR	pEPID,
	FTM_EP_PTR		pInfo
);

FTM_RET	FTDM_DBIF_EP_set
(
	FTM_CHAR_PTR	pEPID,
 	FTM_EP_PTR		pInfo
);

FTM_RET	FTDM_DBIF_EP_setName
(
	FTM_CHAR_PTR	pEPID,
	FTM_CHAR_PTR	pName,
	FTM_INT			nNameLen
);

FTM_RET	FTDM_DBIF_EP_getName
(
	FTM_CHAR_PTR	pEPID,
	FTM_CHAR_PTR	pName,
	FTM_INT_PTR		pNameLen
);

FTM_RET	FTDM_DBIF_EP_setInterval
(
	FTM_CHAR_PTR	pEPID,
	FTM_ULONG		nInterval
);

FTM_RET	FTDM_DBIF_EP_getInterval
(
	FTM_CHAR_PTR	pEPID,
	FTM_ULONG_PTR	pInterval
);

FTM_RET	FTDM_DBIF_EP_setUnit
(
	FTM_CHAR_PTR	pEPID,
	FTM_CHAR_PTR	pUnit,
	FTM_INT			nUnitLen
);

FTM_RET	FTDM_DBIF_EP_getUnit
(
	FTM_CHAR_PTR	pEPID,
	FTM_CHAR_PTR	pUnit,
	FTM_INT_PTR		pUnitLen
);


FTM_RET	FTDM_DBIF_EP_DATA_initTable
(
	FTM_CHAR_PTR	pEPID
);

FTM_RET	FTDM_DBIF_EP_DATA_append
(
	FTM_CHAR_PTR	pEPID,
	FTM_EP_DATA_PTR	pData
);

FTM_RET	FTDM_DBIF_EP_DATA_info
(
	FTM_CHAR_PTR	pEPID,
	FTM_ULONG_PTR	pulBeginTime,
	FTM_ULONG_PTR	pulEndTime
);

FTM_RET	FTDM_DBIF_EP_DATA_get
(
	FTM_CHAR_PTR	pEPID,
	FTM_ULONG		nStartIndex,
	FTM_EP_DATA_PTR	pEPData,
	FTM_ULONG		nMaxCount,
	FTM_ULONG_PTR	pCount
);

FTM_RET	FTDM_DBIF_EP_DATA_getWithTime
(
	FTM_CHAR_PTR	pEPID,
	FTM_ULONG		xBeginTime,
	FTM_ULONG		xEndTime,
	FTM_EP_DATA_PTR	pEPData,
	FTM_ULONG		nMaxCount,
	FTM_ULONG_PTR	pCount
);

FTM_RET	FTDM_DBIF_EP_DATA_del
(
	FTM_CHAR_PTR	pEPID,
	FTM_INT			nIndex,
	FTM_ULONG		nCount
);

FTM_RET	FTDM_DBIF_EP_DATA_delWithTime
(
	FTM_CHAR_PTR	pEPID,
	FTM_ULONG		xBeginTime,
	FTM_ULONG		xEndTime
);

FTM_RET	FTDM_DBIF_EP_DATA_count
(
	FTM_CHAR_PTR	pEPID,
	FTM_ULONG_PTR	pCount
);

FTM_RET	FTDM_DBIF_EP_DATA_countWithTime
(
	FTM_CHAR_PTR	pEPID,
	FTM_ULONG		xBeginTime,
	FTM_ULONG		xEndTime,
	FTM_ULONG_PTR	pCount
);

FTM_RET FTDM_DBIF_setTrace
(
	FTM_BOOL		bTraceON
);

FTM_RET FTDM_DBIF_getTrace
(
	FTM_BOOL_PTR	pbTranceON
);

FTM_RET	FTDM_DBIF_TRIGGER_initTable
(
	FTM_VOID
);

FTM_RET	FTDM_DBIF_TRIGGER_create
(
 	FTM_TRIGGER_PTR	pTrigger
);

FTM_RET	FTDM_DBIF_TRIGGER_destroy
(
	FTM_CHAR_PTR	pID
);

FTM_RET	FTDM_DBIF_TRIGGER_count
(
	FTM_ULONG_PTR	pCount
);

FTM_RET	FTDM_DBIF_TRIGGER_get
(
	FTM_CHAR_PTR	pID,
 	FTM_TRIGGER_PTR	pTrigger
);

FTM_RET	FTDM_DBIF_TRIGGER_getList
(
	FTM_TRIGGER_PTR	pTriggers, 
	FTM_ULONG		nMaxCount,
	FTM_ULONG_PTR	pulCount
);

FTM_RET	FTDM_DBIF_TRIGGER_set
(
	FTM_CHAR_PTR	pID,
 	FTM_TRIGGER_PTR	pTrigger
);

FTM_RET	FTDM_DBIF_ACTION_initTable
(
	FTM_VOID
);

FTM_RET	FTDM_DBIF_ACTION_create
(
 	FTM_ACTION_PTR	pInfo
);

FTM_RET	FTDM_DBIF_ACTION_destroy
(
	FTM_CHAR_PTR	pActionID
);

FTM_RET	FTDM_DBIF_ACTION_count
(
	FTM_ULONG_PTR	pulCount
);

FTM_RET	FTDM_DBIF_ACTION_get
(
	FTM_CHAR_PTR	pActionID,
 	FTM_ACTION_PTR	pAction
);

FTM_RET	FTDM_DBIF_ACTION_set
(
	FTM_CHAR_PTR	pActionID,
 	FTM_ACTION_PTR	pAction
);

FTM_RET	FTDM_DBIF_ACTION_getList
(
	FTM_ACTION_PTR	pActions, 
	FTM_ULONG		nMaxCount,
	FTM_ULONG_PTR	pulCount
);

FTM_RET	FTDM_DBIF_RULE_initTable
(
	FTM_VOID
);

FTM_RET	FTDM_DBIF_RULE_create
(
 	FTM_RULE_PTR	pInfo
);

FTM_RET	FTDM_DBIF_RULE_destroy
(
	FTM_CHAR_PTR	pRuleID
);

FTM_RET	FTDM_DBIF_RULE_count
(
	FTM_ULONG_PTR	pulCount
);

FTM_RET	FTDM_DBIF_RULE_get
(
	FTM_CHAR_PTR	pRuleID,
 	FTM_RULE_PTR	pRule
);

FTM_RET	FTDM_DBIF_RULE_getList
(
	FTM_RULE_PTR	pRules, 
	FTM_ULONG		nMaxCount,
	FTM_ULONG_PTR	pulCount
);

FTM_RET	FTDM_DBIF_RULE_set
(
	FTM_CHAR_PTR	pRuleID,
 	FTM_RULE_PTR	pRule
);

FTM_RET	FTDM_DBIF_LOG_initTable
(
	FTM_CHAR_PTR	pTableName
);

FTM_RET	FTDM_DBIF_LOG_isTableExist
(
	FTM_CHAR_PTR	pTableName,
	FTM_BOOL_PTR	pbExist
);

FTM_RET	FTDM_DBIF_LOG_info
(
	FTM_CHAR_PTR	pTableName,
	FTM_ULONG_PTR	pulCount,
	FTM_ULONG_PTR	pulStart,
	FTM_ULONG_PTR	pulEnd
);

FTM_RET	FTDM_DBIF_LOG_append
(
	FTM_CHAR_PTR	pTableName,
 	FTM_LOG_PTR	pLog
);

FTM_RET	FTDM_DBIF_LOG_del
(
	FTM_CHAR_PTR	pTableName,
	FTM_ULONG		ulIndex,
	FTM_ULONG		ulCount,
	FTM_ULONG_PTR	pulDeletedCount
);

FTM_RET	FTDM_DBIF_LOG_delWithTime
(
	FTM_CHAR_PTR	pTableName,
	FTM_ULONG		ulStart,
	FTM_ULONG		ulEnd,
	FTM_ULONG_PTR	pulDeletedCount
);

FTM_RET	FTDM_DBIF_LOG_count
(
	FTM_CHAR_PTR	pTableName,
	FTM_ULONG_PTR	pulCount
);

FTM_RET	FTDM_DBIF_LOG_countWithTime
(
	FTM_CHAR_PTR	pTableName,
	FTM_ULONG		ulStart,
	FTM_ULONG		ulEnd,
	FTM_ULONG_PTR	pulCount
);

FTM_RET	FTDM_DBIF_LOG_isExist
(
	FTM_CHAR_PTR	pTableName,
	FTM_UINT64		ullID,
	FTM_BOOL_PTR	pbExist
);

FTM_RET	FTDM_DBIF_LOG_getList
(
	FTM_CHAR_PTR	pTableName,
	FTM_ULONG		ulIndex,
	FTM_ULONG		ulMaxCount,
	FTM_LOG_PTR		pLogs, 
	FTM_ULONG_PTR	pulCount
);

FTM_RET	FTDM_DBIF_LOG_get
(
	FTM_CHAR_PTR	pTableName,
	FTM_ULONG		ulIndex,
	FTM_LOG_PTR		pLogs, 
	FTM_ULONG		nMaxCount,
	FTM_ULONG_PTR	pulCount
);

FTM_RET	FTDM_DBIF_LOG_getWithTime
(
	FTM_CHAR_PTR	pTableName,
	FTM_ULONG		ulBegin,
	FTM_ULONG		ulEnd,
	FTM_LOG_PTR		pLogs, 
	FTM_ULONG		nMaxCount,
	FTM_ULONG_PTR	pulCount
);

#endif
